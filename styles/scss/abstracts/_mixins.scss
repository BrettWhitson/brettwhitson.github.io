// Modern Animation & Interaction Mixins

// Subtle hover animations replacing glitch effects
@mixin hover-lift($distance: 2px, $shadow: var(--shadow-md)) {
  transition: var(--transition-base);

  &:hover {
    transform: translateY(-#{$distance});
    box-shadow: $shadow;
  }
}

@mixin hover-scale($scale: 1.05) {
  transition: var(--transition-base);

  &:hover {
    transform: scale($scale);
  }
}

@mixin hover-glow($color: var(--color-primary)) {
  transition: var(--transition-base);

  &:hover {
    box-shadow: 0 0 0 3px rgba(#{$color}, 0.1);
  }
}

// Focus styles mixin
@mixin focus-ring($color: var(--color-primary), $width: 2px, $offset: 2px) {
  &:focus-visible {
    outline: #{$width} solid #{$color};
    outline-offset: #{$offset};
    border-radius: var(--radius-sm);
  }
}

// Button interaction patterns
@mixin button-base {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  border: none;
  border-radius: var(--radius-md);
  font-weight: var(--font-medium);
  text-decoration: none;
  cursor: pointer;
  transition: var(--transition-base);
  position: relative;
  overflow: hidden;

  &:disabled {
    opacity: 0.5;
    cursor: not-allowed;
    transform: none !important;
  }

  @include focus-ring();
}

@mixin button-primary {
  @include button-base;
  background: var(--color-primary);
  color: var(--color-text-inverse);

  &:hover:not(:disabled) {
    background: var(--color-primary-hover);
    transform: translateY(-1px);
    box-shadow: var(--shadow-lg);
  }

  &:active {
    transform: translateY(0);
  }
}

@mixin button-secondary {
  @include button-base;
  background: var(--color-surface);
  color: var(--color-text-primary);
  border: 1px solid var(--color-border);

  &:hover:not(:disabled) {
    background: var(--color-surface-elevated);
    border-color: var(--color-border-hover);
    transform: translateY(-1px);
    box-shadow: var(--shadow-md);
  }

  &:active {
    transform: translateY(0);
  }
}

@mixin button-ghost {
  @include button-base;
  background: transparent;
  color: var(--color-primary);

  &:hover:not(:disabled) {
    background: var(--color-surface);
    transform: translateY(-1px);
  }

  &:active {
    transform: translateY(0);
  }
}

// Card interaction patterns
@mixin card-base {
  background: var(--color-surface);
  border: 1px solid var(--color-border);
  border-radius: var(--radius-lg);
  transition: var(--transition-base);
}

@mixin card-interactive {
  @include card-base;
  cursor: pointer;

  &:hover {
    transform: translateY(-2px);
    box-shadow: var(--shadow-lg);
    border-color: var(--color-border-hover);
  }

  &:active {
    transform: translateY(-1px);
  }
}

// Glass morphism effect
@mixin glass-morphism($opacity: 0.9) {
  background: rgba(255, 255, 255, $opacity);
  backdrop-filter: blur(12px);
  -webkit-backdrop-filter: blur(12px);
  border: 1px solid rgba(255, 255, 255, 0.2);

  [data-theme="dark"] & {
    background: rgba(30, 41, 59, $opacity);
    border-color: rgba(255, 255, 255, 0.1);
  }
}

// Loading states
@keyframes pulse-modern {
  0%,
  100% {
    opacity: 1;
  }
  50% {
    opacity: 0.5;
  }
}

@keyframes shimmer {
  0% {
    background-position: -468px 0;
  }
  100% {
    background-position: 468px 0;
  }
}

@mixin loading-skeleton {
  background: linear-gradient(90deg, var(--color-surface) 25%, var(--color-border) 50%, var(--color-surface) 75%);
  background-size: 200% 100%;
  animation: shimmer 1.5s infinite;
}

@mixin loading-pulse {
  animation: pulse-modern 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
}

// Smooth appear animations
@keyframes fade-in-up {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes fade-in-down {
  from {
    opacity: 0;
    transform: translateY(-20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes fade-in {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes scale-in {
  from {
    opacity: 0;
    transform: scale(0.95);
  }
  to {
    opacity: 1;
    transform: scale(1);
  }
}

@mixin animate-fade-in-up($duration: 0.6s, $delay: 0s) {
  animation: fade-in-up $duration ease-out $delay both;
}

@mixin animate-fade-in-down($duration: 0.6s, $delay: 0s) {
  animation: fade-in-down $duration ease-out $delay both;
}

@mixin animate-fade-in($duration: 0.4s, $delay: 0s) {
  animation: fade-in $duration ease-out $delay both;
}

@mixin animate-scale-in($duration: 0.4s, $delay: 0s) {
  animation: scale-in $duration ease-out $delay both;
}

// Responsive mixins
@mixin mobile-only {
  @media (max-width: 767px) {
    @content;
  }
}

@mixin tablet-up {
  @media (min-width: 768px) {
    @content;
  }
}

@mixin desktop-up {
  @media (min-width: 1024px) {
    @content;
  }
}

@mixin large-desktop-up {
  @media (min-width: 1200px) {
    @content;
  }
}

// Utility mixins
@mixin sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}

@mixin truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

@mixin line-clamp($lines: 3) {
  display: -webkit-box;
  -webkit-line-clamp: $lines;
  -webkit-box-orient: vertical;
  overflow: hidden;
}
